name: Test

on: [push, pull_request]

jobs:
  build-test-unix:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-file: environment.yml

      - name: Build and install model
        run: |
          mkdir build && pushd build
          cmake ../external/bmi-example-fortran -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX
          make install
          popd

      - name: Build and install package
        run: |
          make install

      - name: Test import
        working-directory: ${{ github.workspace }}/examples
        run: |
          python -c 'import pymt_heatf'

      - name: Test BMI
        run: |
          make test

      - name: Run examples
        working-directory: ${{ github.workspace }}/examples
        run: |
          python heatf_ex.py
          python pymt_heatf_ex.py

  build-test-windows:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    runs-on: windows-latest

    env:
      LIBRARY_PREFIX: $env:CONDA_PREFIX\Library

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: ilammy/msvc-dev-cmd@v1
      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: testing
          create-args: >-
            cmake
            pkg-config
            cxx-compiler
            python
            pip
          init-shell: >-
            powershell

      # The Fortran conda compiler doesn't seem to work on Windows in Actions.
      # Instead, use the gfortran installed by chocolately. However, we then
      # can't use the bmi-fortran package from conda-forge because it's not
      # ABI-compatible. So, build bmi-fortran locally, This is a hack
      # workaround.
      - name: Build the bmi-fortran specification locally
        run: |
            curl -o bmi-fortran.zip -L https://github.com/csdms/bmi-fortran/archive/refs/heads/master.zip
            unzip bmi-fortran.zip
            cd bmi-fortran-master
            mkdir build && cd build
            cmake .. -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX="${{ env.LIBRARY_PREFIX }}" -DCMAKE_BUILD_TYPE=Release
            cmake --build . --target install --config Release
            cd ${{ github.workspace }}

      - name: Make build directory for cmake and meson
        run: cmake -E make_directory build

      - name: Configure, build, and install the model
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake ../external/bmi-example-fortran -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX="${{ env.LIBRARY_PREFIX }}" -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target install --config Release

      - name: Build and install the package
        run: |
          make install

      - name: Test import
        working-directory: ${{ github.workspace }}/examples
        run: |
          python -c 'import pymt_heatf'

      - name: Test BMI
        run: |
          make test

      - name: Run examples
        working-directory: ${{ github.workspace }}/examples
        run: |
          python heatf_ex.py
          python pymt_heatf_ex.py
